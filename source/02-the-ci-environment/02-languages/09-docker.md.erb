---
title:  "Docker"
doc_title: "Using Docker on Snap CI"
---

Docker support on Snap CI is in beta and is only enabled for some users. If you would like to try these features please contact us at <a href="support@snap-ci.com">Snap CI support</a>.

Snap CI provides support for building, testing and deploying Docker images. You can use the commands listed at <a href="https://docs.docker.com/engine/reference/commandline/cli/">docs.docker.com</a> to use Docker on Snap CI.

Snap CI provides the following Docker versions 

<%#add partial%>

# Building, testing and deploying Docker containers on Snap CI

In this project example we build a simple Docker container for a dummy NodeJS app, run and test it before publishing to a registry.

<%#Add image of pipeline%>
<%#Add image of stage config%>

This example: 

* Builds a Docker image based on the steps in its Dockerfile 
* Creates a new container based on that image with the Docker run command and starts the app inside it
* Runs a simple test against the container
* Deploys the freshly built image to DockerHub

<%#Need to add steps here%>

You can see this pipeline running on <a href="https://snap-ci.com/snap-ci-examples/node-js-docker/branch/master">"Snap CI"</a>.

# Known limitations

## Propagating Docker images between stages

Currently, we use the same build worker to run successive automatic stages whenever possible but there are scenarios where this might not happen which means that Docker images built in one stage might not be available in the next stage unless published to a registry. We have plans to provide first class support for Docker image propagation on the pipeline similar to artifact propagation but for now we recommend publishing the images built in a stage to a Docker registry so that they can be used in subsequent stages.

## Parallel and bigger sized workers

Selecting bigger sized workers or parallel workers for your build doesn't have any effect at the moment. The build will run on the single worker size and parallel configurations will run sequentially.

# FAQ
